// إعدادات OpenAI - شفا كير
export interface OpenAIConfig {
  apiKey: string;
  model: string;
  maxTokens: number;
  temperature: number;
  timeout: number;
  retries: number;
}

export interface AIPromptTemplate {
  system: string;
  user: string;
  variables: string[];
}

// الإعدادات الافتراضية
export const DEFAULT_OPENAI_CONFIG: OpenAIConfig = {
  apiKey: import.meta.env.VITE_OPENAI_API_KEY || '',
  model: 'gpt-3.5-turbo',
  maxTokens: 1000,
  temperature: 0.7,
  timeout: 30000,
  retries: 3
};

// قوالب الرسائل الجاهزة
export const AI_PROMPTS = {
  // تحليل الجلسات
  SESSION_ANALYSIS: {
    system: `أنت معالج نفسي محترف متخصص في علاج الإدمان. مهمتك تحليل الجلسات العلاجية وتقديم رؤى مفيدة باللهجة المصرية.

يجب أن تكون إجاباتك:
- دقيقة ومهنية
- باللهجة المصرية البسيطة
- عملية وقابلة للتطبيق
- تراعي السياق الثقافي المصري
- تحترم خصوصية المريض`,
    user: `قم بتحليل الجلسة التالية:

الملاحظات الخام: {rawNotes}

المطلوب:
1. إعادة كتابة الملاحظات بشكل منظم ومفهوم
2. ملخص مختصر للجلسة
3. تحليل المشاعر مع تحديد:
   - المشاعر الأساسية
   - المشاعر الثانوية  
   - شدة المشاعر (1-10)
   - الحالة العاطفية العامة

أجب باللغة العربية وباللهجة المصرية.`
  },

  // اقتراح خطط علاجية
  TREATMENT_PLAN: {
    system: `أنت خبير في علاج الإدمان. مهمتك إنشاء خطط علاجية شاملة ومخصصة بناءً على حالة المريض.

يجب أن تكون خططك:
- مخصصة لحالة المريض
- عملية وقابلة للتطبيق
- تراعي السياق المصري
- تشمل جميع جوانب العلاج
- لها مؤشرات نجاح واضحة`,
    user: `معلومات المريض:
الاسم: {patientName}
العمر: {age}
نوع الإدمان: {addictionType}
الحالة الحالية: {currentStatus}
عوامل الخطر: {riskFactors}

قم بإنشاء خطة علاجية شاملة تتضمن:
1. نوع العلاج (فردي/جماعي/عائلي)
2. مدة العلاج بالأسابيع
3. عدد الجلسات أسبوعياً
4. الأهداف العلاجية
5. التدخلات المطلوبة
6. استراتيجيات تقليل المخاطر
7. مؤشرات النجاح

أجب باللغة العربية وبشكل منظم.`
  },

  // تقييم مخاطر الانتكاس
  RELAPSE_RISK: {
    system: `أنت خبير في تقييم مخاطر الانتكاس في علاج الإدمان. مهمتك تحليل عوامل الخطر وتقديم توصيات عملية.

يجب أن تكون تقييماتك:
- دقيقة ومبنية على الأدلة
- عملية وقابلة للتطبيق
- تراعي السياق المصري
- تشمل خطوات وقائية واضحة`,
    user: `بيانات المريض:
{patientData}

تاريخ الجلسات:
{sessionsHistory}

قم بتقييم مخاطر الانتكاس وتقديم:
1. مستوى الخطر (منخفض/متوسط/عالي/حرج)
2. احتمالية الانتكاس (0-100%)
3. عوامل الخطر الرئيسية
4. التوصيات الوقائية
5. موعد التقييم القادم

أجب باللغة العربية وبشكل منظم.`
  },

  // إنشاء تقارير ذكية
  SMART_REPORT: {
    system: `أنت خبير في كتابة التقارير الطبية. مهمتك إنشاء تقارير شاملة ومهنية عن حالة المرضى.

يجب أن تكون تقاريرك:
- شاملة ومفصلة
- مهنية ودقيقة
- سهلة الفهم
- تشمل توصيات عملية
- تراعي السياق المصري`,
    user: `قم بإنشاء تقرير {reportType} شامل للمريض {patientId}.

المطلوب في التقرير:
1. ملخص الحالة
2. التقدم المحرز
3. التحديات والعراقيل
4. التوصيات العلاجية
5. الخطوات التالية
6. مؤشرات النجاح

أجب باللغة العربية وبشكل منظم ومهني.`
  },

  // اقتراح أنشطة علاجية
  THERAPEUTIC_ACTIVITIES: {
    system: `أنت خبير في الأنشطة العلاجية. مهمتك اقتراح أنشطة مناسبة لحالة المريض وأهدافه العلاجية.

يجب أن تكون الأنشطة:
- مناسبة لحالة المريض
- متنوعة وممتعة
- تساعد في تحقيق الأهداف
- قابلة للتطبيق في المركز
- تراعي السياق المصري`,
    user: `بناءً على حالة المريض والجلسة، اقترح أنشطة مناسبة:

بيانات المريض:
{patientProfile}

نتائج الجلسة:
{sessionResults}

اقترح أنشطة تشمل:
- أنشطة علاجية فردية
- أنشطة جماعية
- أنشطة عائلية
- أنشطة ترفيهية
- أنشطة تعليمية

كل نشاط يجب أن يكون:
- مناسب لحالة المريض
- له مدة محددة
- له تكرار محدد
- يساعد في تحقيق الأهداف العلاجية

أجب باللغة العربية وباللهجة المصرية.`
  }
};

// دوال مساعدة
export const createPrompt = (template: AIPromptTemplate, variables: Record<string, string>): string => {
  let prompt = template.user;
  
  for (const [key, value] of Object.entries(variables)) {
    prompt = prompt.replace(new RegExp(`{${key}}`, 'g'), value);
  }
  
  return prompt;
};

export const validateOpenAIConfig = (config: OpenAIConfig): boolean => {
  return !!(config.apiKey && config.apiKey.length > 0);
};

export const getOpenAIConfig = (): OpenAIConfig => {
  const config = { ...DEFAULT_OPENAI_CONFIG };
  
  // التحقق من وجود المفتاح
  if (!config.apiKey) {
    console.warn('OpenAI API key not found. Please set VITE_OPENAI_API_KEY in your environment variables.');
  }
  
  return config;
}; 